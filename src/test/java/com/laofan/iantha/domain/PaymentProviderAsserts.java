package com.laofan.iantha.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentProviderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentProviderAllPropertiesEquals(PaymentProvider expected, PaymentProvider actual) {
        assertPaymentProviderAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentProviderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentProviderAllUpdatablePropertiesEquals(PaymentProvider expected, PaymentProvider actual) {
        assertPaymentProviderUpdatableFieldsEquals(expected, actual);
        assertPaymentProviderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentProviderAutoGeneratedPropertiesEquals(PaymentProvider expected, PaymentProvider actual) {
        assertThat(expected)
            .as("Verify PaymentProvider auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentProviderUpdatableFieldsEquals(PaymentProvider expected, PaymentProvider actual) {
        assertThat(expected)
            .as("Verify PaymentProvider relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getWebsiteUrl()).as("check websiteUrl").isEqualTo(actual.getWebsiteUrl()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentProviderUpdatableRelationshipsEquals(PaymentProvider expected, PaymentProvider actual) {}
}
