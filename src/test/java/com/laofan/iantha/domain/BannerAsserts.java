package com.laofan.iantha.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BannerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBannerAllPropertiesEquals(Banner expected, Banner actual) {
        assertBannerAutoGeneratedPropertiesEquals(expected, actual);
        assertBannerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBannerAllUpdatablePropertiesEquals(Banner expected, Banner actual) {
        assertBannerUpdatableFieldsEquals(expected, actual);
        assertBannerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBannerAutoGeneratedPropertiesEquals(Banner expected, Banner actual) {
        assertThat(expected)
            .as("Verify Banner auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBannerUpdatableFieldsEquals(Banner expected, Banner actual) {
        assertThat(expected)
            .as("Verify Banner relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getImages()).as("check images").isEqualTo(actual.getImages()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBannerUpdatableRelationshipsEquals(Banner expected, Banner actual) {}
}
